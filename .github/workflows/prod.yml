name: ci/cd prod

on:
  push:
    branches:
      - main
    paths:
      - '**.html'
      - '**.ts'
      - '**.tsx'
      - '**.spec.**'
      - '**.yml'
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20  

      - name: Cache node-modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: cache-key-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cache-key-node-modules-

      - name: Set up summary
        run: echo "### Setup Job Completed Successfully" >> $GITHUB_STEP_SUMMARY

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Install dependencies
        run: npm ci

      - name: Lint app
        run: npm run lint

      - name: Upload Lint Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lint-report
          path: lint-report.txt

      - name: Set up summary
        run: |
          echo "### Lint Job Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Installed dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- Ran linting process" >> $GITHUB_STEP_SUMMARY
          echo "- Uploaded lint report as artifact" >> $GITHUB_STEP_SUMMARY

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Install dependencies
        run: npm ci

      - name: Unit test
        run: npm run test

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report.xml

      - name: Set up summary
        run: |
          echo "### Test Job Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Installed dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- Ran unit tests" >> $GITHUB_STEP_SUMMARY
          echo "- Uploaded test report as artifact" >> $GITHUB_STEP_SUMMARY

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node-modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: cache-key-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cache-key-node-modules-

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/

      - name: Set up summary
        run: |
          echo "### Build Job Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Checked out code" >> $GITHUB_STEP_SUMMARY
          echo "- Installed dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- Built the application" >> $GITHUB_STEP_SUMMARY
          echo "- Uploaded build artifacts" >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Set up summary
        run: |
          echo "### Deploy Job Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Checked out code" >> $GITHUB_STEP_SUMMARY
          echo "- Installed Vercel CLI" >> $GITHUB_STEP_SUMMARY
          echo "- Pulled Vercel environment information" >> $GITHUB_STEP_SUMMARY
          echo "- Built project artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Deployed project artifacts to Vercel" >> $GITHUB_STEP_SUMMARY
